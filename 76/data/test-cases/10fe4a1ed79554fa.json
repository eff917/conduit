{"uid":"10fe4a1ed79554fa","name":"test_valid_signup[testuser0-testuser0@mailinator.com-TestUserPass0-Your registration was successful!]","fullName":"tests.test_03_signup#test_valid_signup","historyId":"ae04ec3d5dcdf3ba7f5ce416ed04ce31","time":{"start":1656510021622,"stop":1656510023669,"duration":2047},"description":"\n    Signup test\n    ","descriptionHtml":"<pre><code>Signup test\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"96b4c38de867ff68194a7fbbcf4c5d24\")>\nusername = 'testuser0', email = 'testuser0@mailinator.com'\npassword = 'TestUserPass0'\nexpected_message = 'Your registration was successful!'\n\n    @pytest.mark.parametrize(\n        \"username, email, password, expected_message\",\n        [\n            (\n                \"testuser0\",\n                \"testuser0@mailinator.com\",\n                \"TestUserPass0\",\n                \"Your registration was successful!\",\n            ),\n        ],\n    )\n    def test_valid_signup(driver, username, email, password, expected_message):\n        \"\"\"\n        Signup test\n        \"\"\"\n        with allure.step(\"test valid signup\"):\n            driver.get(URL)\n            signup_link = driver.find_element_by_xpath('//a[@href=\"#/register\"]')\n            signup_link.click()\n            take_screenshot(driver, \"signup_page\")\n            signup_username_field = driver.find_element_by_xpath(\n                '//input[@placeholder=\"Username\"]'\n            )\n            signup_email_field = driver.find_element_by_xpath(\n                '//input[@placeholder=\"Email\"]'\n            )\n            signup_password_field = driver.find_element_by_xpath(\n                '//input[@placeholder=\"Password\"]'\n            )\n            signup_button = driver.find_element_by_xpath(\n                '//button[contains(text(), \"Sign up\")]'\n            )\n    \n            signup_username_field.send_keys(username)\n            signup_email_field.send_keys(email)\n            signup_password_field.send_keys(password)\n            take_screenshot(driver, \"signup_page_after_fill\")\n            signup_button.click()\n            sleep(1)\n            take_screenshot(driver, \"after_signup\")\n            error_message = driver.find_element_by_xpath('//div[@class=\"swal-text\"]')\n>           assert error_message.text == expected_message\nE           AssertionError: assert '' == 'Your registr...s successful!'\nE             - Your registration was successful!\n\ntests/test_03_signup.py:105: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1656510020425,"stop":1656510021620,"duration":1195},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n    Signup test\n    ","status":"failed","statusMessage":"AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"96b4c38de867ff68194a7fbbcf4c5d24\")>\nusername = 'testuser0', email = 'testuser0@mailinator.com'\npassword = 'TestUserPass0'\nexpected_message = 'Your registration was successful!'\n\n    @pytest.mark.parametrize(\n        \"username, email, password, expected_message\",\n        [\n            (\n                \"testuser0\",\n                \"testuser0@mailinator.com\",\n                \"TestUserPass0\",\n                \"Your registration was successful!\",\n            ),\n        ],\n    )\n    def test_valid_signup(driver, username, email, password, expected_message):\n        \"\"\"\n        Signup test\n        \"\"\"\n        with allure.step(\"test valid signup\"):\n            driver.get(URL)\n            signup_link = driver.find_element_by_xpath('//a[@href=\"#/register\"]')\n            signup_link.click()\n            take_screenshot(driver, \"signup_page\")\n            signup_username_field = driver.find_element_by_xpath(\n                '//input[@placeholder=\"Username\"]'\n            )\n            signup_email_field = driver.find_element_by_xpath(\n                '//input[@placeholder=\"Email\"]'\n            )\n            signup_password_field = driver.find_element_by_xpath(\n                '//input[@placeholder=\"Password\"]'\n            )\n            signup_button = driver.find_element_by_xpath(\n                '//button[contains(text(), \"Sign up\")]'\n            )\n    \n            signup_username_field.send_keys(username)\n            signup_email_field.send_keys(email)\n            signup_password_field.send_keys(password)\n            take_screenshot(driver, \"signup_page_after_fill\")\n            signup_button.click()\n            sleep(1)\n            take_screenshot(driver, \"after_signup\")\n            error_message = driver.find_element_by_xpath('//div[@class=\"swal-text\"]')\n>           assert error_message.text == expected_message\nE           AssertionError: assert '' == 'Your registr...s successful!'\nE             - Your registration was successful!\n\ntests/test_03_signup.py:105: AssertionError","steps":[{"name":"test valid signup","time":{"start":1656510021622,"stop":1656510023669,"duration":2047},"status":"failed","statusMessage":"AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!\n","statusTrace":"  File \"/home/runner/work/conduit/conduit/tests/test_03_signup.py\", line 105, in test_valid_signup\n    assert error_message.text == expected_message\n","steps":[],"attachments":[{"uid":"ffd0deade8af1098","name":"signup_page","source":"ffd0deade8af1098.png","type":"image/png","size":38040},{"uid":"a1ab53632b3e6554","name":"signup_page_after_fill","source":"a1ab53632b3e6554.png","type":"image/png","size":39294},{"uid":"1a84bebaef56ea97","name":"after_signup","source":"1a84bebaef56ea97.png","type":"image/png","size":39602}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"82f41bb83d1580ba","name":"log","source":"82f41bb83d1580ba.txt","type":"text/plain","size":338},{"uid":"a9450137afb8cfcd","name":"stdout","source":"a9450137afb8cfcd.txt","type":"text/plain","size":1},{"uid":"cdef9736dbfb60fb","name":"stderr","source":"cdef9736dbfb60fb.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":1,"attachmentsCount":6,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1656510023711,"stop":1656510023766,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_03_signup"},{"name":"host","value":"fv-az183-235"},{"name":"thread","value":"3431-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_03_signup"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'testuser0@mailinator.com'"},{"name":"expected_message","value":"'Your registration was successful!'"},{"name":"password","value":"'TestUserPass0'"},{"name":"username","value":"'testuser0'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"10fe4a1ed79554fa.json","parameterValues":["'testuser0@mailinator.com'","'Your registration was successful!'","'TestUserPass0'","'testuser0'"]}